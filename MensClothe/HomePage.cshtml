@using CurrencyUtility;
@using Zayko.Finance;
@using DAL;
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#searchBox').autocomplete({
                autoFocus: true,
                minLength: 2,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        cache: false,
                        timeout: 30000,
                        url: "@AspControlUtil.getAppPath()Web_Service/WebService.asmx/SearchProduct",
                        data: "{ 'searchString': '" + request.term + "' }",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.Description,
                                    value: item.Description,
                                    data: item
                                }
                            }));
                        },

                        failure: function (errMsg) {
                            alert(errMsg);
                        }
                    });
                },

                    //focus: function (event, ui) {
                    //    $("#searchContent").html(ui.item.data.HTML);
                    //},
                    change: function (event, ui) {
                        if (ui.item) {
                            $("#searchContent").html(ui.item.data.HTML);
                        }
                        //} else
                        //{
                        //    $("#searchContent").val("");
                        //}
                        //$("#searchContent").val("");
                    },

                    select: function (event, ui) {
                        //                 alert(ui.item.data.HTML);
                        $("#searchContent").html(ui.item.data.HTML);
                    }

                });

        });

        function OnSuccess() {
        }
        function OnError() {
        }

    </script>

}

@{
   
    
    Layout = "~/_siteLayout.cshtml";
    Page.Title = "Home Page";

    var Price = "";
    var quantity = "";
    var Description = "";
    var size = "";
    int i = 0;
    Products db = new Products();
    var items = new List<SelectListItem>();
    string img = string.Empty;
    var ms = new MemoryStream();
    var ItemName = "";
    var curList = new List<SelectListItem>();
    var rInfoList = CurrencyTools.map;
    //Country cntry = new Country();
    //string countryCode = cntry.GetUserLocation().CountryCode;
    var SC = (MensClothe.Cart)PageData["SCart"];

    List<Category> CategoryRecords = Category.getCategoryRecodCollections();


    // Response.Write("<table border=\"1\"><tr><th>Country Name</th><th>Currency Sybol</th><th>Current Exchange Rate</th></tr>");
    foreach (KeyValuePair<string, string> pair in rInfoList)
    {
        string isoCurSymbol = pair.Key;
        string y = pair.Value;
        curList.Add(new SelectListItem { Text = y.Split('#')[1] + "(" + y.Split('#')[0] + ")", Value = isoCurSymbol });

    }
    // curList.Sort();
    curList = curList.OrderBy(x => x.Text).ToList();

    if (IsPost)
    {
        //string ISOcurSymbol = Request.Form["ddlCUR"].ToString();
        //CurrencyConverter myCurrencyConverter = new CurrencyConverter();
        //IList<CurrencyData> currencyList = new List<CurrencyData>();
        //currencyList.Add(new CurrencyData("LKR", ISOcurSymbol));

        //try
        //{
        //    myCurrencyConverter.GetCurrencyData(ref currencyList);

        //    //     exRate = currencyList[0].Rate;

        //}
        //catch
        //{
        //    // Catch an exception
        //}

    }





    if (IsPost && !string.IsNullOrEmpty(Request.Form["productid"].ToString()))
    {
        var PrdID = Request.Form["productid"];
        Products ProductRecord = Products.getProductDetail(int.Parse(PrdID));    // .QuerySingle("SELECT ItemName, Description, Price, QOH, Size, ItemImage FROM  Products Where ItemID=@0 ", PrdID);
        if (ProductRecord != null)
        {
            Price = Convert.ToString(ProductRecord.price);
            Description = Convert.ToString(ProductRecord.Description);
            quantity = Convert.ToString(ProductRecord.quantity);
            size = Convert.ToString(ProductRecord.categoryID);
            img = Convert.ToString(ProductRecord.img);
            ItemName = (ProductRecord.name.ToString());
        }


        if (SC == null)
        {
            SC = new MensClothe.Cart();
        }
        SC.Insert(int.Parse(PrdID), double.Parse(Price), 1, ItemName, img);

    }



    // If this is a POST request, validate and process data
  
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@Page.Title.</h1>
                <h2><i><b>fashionstore.lk</b></i></h2>
            </hgroup>

            <p>
                <label>Type your Item's first Four letters for search</label>
                <input id="searchBox" type="text" />
            </p>

            <p style="ruby-align: right">

                <label>
                    Select your currecy:
                </label>
                <select id="ddlCUR" name="ddlCUR" onchange="setCurrency(this);">
                    @foreach (var item in curList)
                    {
                        <option   value="@item.Value" @if (item.Value == App.ISOcur)
                                                      {<text> selected="selected" </text> }  >
                            @item.Text
                        </option>
                    }
                </select>

            </p>

        </div>

    </section>
}

<h3>Products</h3>
<form method="post">



    <div id="searchContent" class="content-wrapper">
    </div>
    <input id="productid" name="productid" type="hidden" />

    <ol class="round">

        <li><a href="~/Products/ProductResults">All Products</a></li>

        @foreach (var category in CategoryRecords)
        {
        
            <li class="@i">
                <a href="~/Products/ProductResults?cat=@category.categoryid.ToString()">@category.categoryname</a>
            </li>
            i++;
        }


    </ol>

</form>
