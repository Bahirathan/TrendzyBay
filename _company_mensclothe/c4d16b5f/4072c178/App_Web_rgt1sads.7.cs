#pragma checksum "G:\Company\MensClothe\PaymentOrder.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5A9143844AE350A2538EFAC3D46279470177A221"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP {
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.WebPages.Html;
    using WebMatrix.Data;
    using WebMatrix.WebData;
    using Microsoft.Web.WebPages.OAuth;
    using DotNetOpenAuth.AspNet;
    
    
    public class _Page_PaymentOrder_cshtml : System.Web.WebPages.WebPage {
        
#line hidden
        
        public _Page_PaymentOrder_cshtml() {
        }
        
        protected ASP.global_asax ApplicationInstance {
            get {
                return ((ASP.global_asax)(Context.ApplicationInstance));
            }
        }
        
        public override void Execute() {
DefineSection("Scripts", () => {

WriteLiteral("\r\n\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 33), Tuple.Create("\"", 71)
, Tuple.Create(Tuple.Create("", 39), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.min.js")
, 39), false)
);

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 95), Tuple.Create("\"", 145)
, Tuple.Create(Tuple.Create("", 101), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.unobtrusive.min.js")
, 101), false)
);

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">






        $(document).ready(function () {

        });

        function SelectedItemClick(obj) {
            popupwin = window.open('DetailClotheResult' + ""?resultIndex="" + obj.id + ""&isPopup=1"", 'Detail', 'height=' + 600 + ',width=' + 520 + ',scrollbars=yes,left=400,top=300');
            popupwin.focus();
        }


        function btnSubmit_Click(CustomerDetails, carddetails, amount, PayPalReturnRequest) {
            debugger;
            //var amout = document.getElementById();
            //var CCType = document.getElementById();
            //var payPalreturnRequest = document.getElementById();

            $.ajax({
                type: ""POST"",
                url: """);

            
            #line 30 "G:\Company\MensClothe\PaymentOrder.cshtml"
                 Write(MensClothe.AspControlUtil.getAppPath());

            
            #line default
            #line hidden
WriteLiteral(@"Web_Service/WebService.asmx/ProcessPayment"",
                contentType: ""application/json; charset=utf-8"",
                data: ""{cus:'"" + CustomerDetails + ""',ccard:'"" + carddetails + ""',Amount:'"" + amount + ""',PayPalReturnRequest:'"" + PayPalReturnRequest + ""'}"",
                success: OnSucceess,
                error: OnError
            })

            // MensClothe.Web_Service.SelectedItemClick(id, OnSucceess, OnError);

        }



        function OnSucceess() {

            alert(""success"");

        }

        function OnError(error) {

        }

    </script>

");

});

WriteLiteral("\r\n\r\n");

            
            #line 58 "G:\Company\MensClothe\PaymentOrder.cshtml"
  
    Page.Title = "Order Form";
    Layout = "~/_SiteLayout.cshtml";

    ProfileCommon profile = HttpContext.Current.Profile as ProfileCommon;
    var CartItems = profile.SCart.Items;
    var amount = string.Empty;
    var CustomerDetails = new Customer();
    var carddetails = new CCard();
    bool PayPalReturnRequest = false;

    // validate();
    // Setup validation
    Validation.RequireField("txtCCType", "You Must Select a Payment type");
    Validation.RequireField("Price", "Price cannot be blank.");
    //Validation.RequireField("ItemImage", "Choose Item Image");
    Validation.RequireField("Size", "Size required ");

    // Setup validation
    Validation.RequireField("ItemName", "You must specify the  Clothes name.");
    Validation.RequireField("Price", "Price cannot be blank.");
    //Validation.RequireField("ItemImage", "Choose Item Image");
    Validation.RequireField("Size", "Size required ");

    Validation.RequireField("txtName", "Enter your Name.");
    Validation.Add("txtName",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 2,
            errorMessage: "Name Cannot be empty"));

    Validation.RequireField("txtCity", "Enter city Name.");
    Validation.Add("txtCity",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "City name cannot empty."));



    Validation.RequireField("txtCC", "Enter card number.");
    Validation.Add("txtCC",
        Validator.StringLength(
            maxLength: 16,
            minLength: 16,
            errorMessage: "Credit Card number must be 16 characters ."));


    Validation.RequireField("txtState", "Enter state.");
    Validation.Add("txtState",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Province name cannot empty."));

    Validation.RequireField("txtAddress", "Enter your Address");
    Validation.Add("txtAddress",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Enter detail address"));

    Validation.RequireField("txtEmail", "Enter Email Address");
    Validation.Add("txtEmail",
      Validator.Regex(@"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$",
      "Invalid format for an email address"));

    Validation.RequireField("txtPhone", "Enter Phone Number");
    Validation.Add("txtPhone",
    Validator.StringLength(maxLength: Int32.MaxValue,
            minLength: 10, errorMessage: "Must be between 10 and 20"));

    //Validation.RequireField("txtSecurity", "Enter Security code");
    Validation.Add("txtSecurity",
        Validator.Required("Must be three numbers"));


    if (IsPost)
    {


        AntiForgery.Validate();
        // CustomerDetails = new Customer
        {
            CustomerDetails.FirstName = Request.Form["txtName"].ToString();
            CustomerDetails.Address = Request.Form["txtAddress"].ToString();
            CustomerDetails.City = Request.Form["txtCity"].ToString();
            CustomerDetails.Country = Request.Form["txtCountryId"].ToString();
            CustomerDetails.Email = Request.Form["txtEmail"].ToString();
            CustomerDetails.phone = Request.Form["txtPhone"].ToString();
            CustomerDetails.State = Request.Form["txtState"].ToString();
            CustomerDetails.Zipcode = Request.Form["txtZip"].ToString();
        };

        //  carddetails = new CCard
        {
            carddetails.CreditCardExpiration = Request.Form["txtCCMonth"].ToString() + "/" + Request.Form["txtCCYear"].ToString();
            carddetails.CreditCardNumber = Request.Form["txtCC"].ToString();
            carddetails.SecurityCode = Request.Form["txtSecurity"].ToString();
        };


        amount = Request.Form["txtOrderAmount"].ToString();
        OrderClass order = new OrderClass();
        if (Validation.IsValid())
        {

            if (Request.QueryString["PayPal"] != null && !IsPost)
            {
                // order.HandlePayPalReturn();


                string Result = HttpContext.Current.Request.QueryString["PayPal"];
                string Redir = (string)HttpContext.Current.Session["PayPal_Redirected"];

                // *** Only do this if we are redirected!
                if (Redir == "True")
                {
                    HttpContext.Current.Session.Remove("PayPal_Redirected");

                    // *** Set flag so we know not to go TO PayPal again
                    PayPalReturnRequest = true;
                    Request.Form["txtOrderAmount"] = ((decimal)HttpContext.Current.Session["PayPal_OrderAmount"]).ToString();
                    Request.Form["txtCCType"] = "PP";

                    if (Result == "Cancel")
                    {
                        Response.Write("<script>alert('PayPal Payment Processing Failed');</script>");
                    }
                    else
                    {
                        // *** We returned successfully - simulate button click to save the order
                        string script = "btnSubmit_Click();";
                        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "Alert", script, true);

                    }

                }

            }

        }
    }


    
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n<section>\r\n    <form");

WriteLiteral(" id=\"frmOrderForm\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 208 "G:\Company\MensClothe\PaymentOrder.cshtml"
   Write(AntiForgery.GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 209 "G:\Company\MensClothe\PaymentOrder.cshtml"
   Write(Html.ValidationSummary("Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null));

            
            #line default
            #line hidden
WriteLiteral(@"
        <fieldset>
            <legend>Shopping Cart Details</legend>
            <br />
            <table>
                <tr>
                    <td>
                        <label>
                            <b>Price</b></label>
                    </td>

                    <td>
                        <label");

WriteLiteral(" for=\"ItemImage\"");

WriteLiteral(">\r\n                            <b>Quantity</b>\r\n                        </label>\r" +
"\n\r\n                    </td>\r\n\r\n                    <td>\r\n                      " +
"  <label");

WriteLiteral(" for=\"ItemImage\"");

WriteLiteral(@">
                            <b>Image</b>
                        </label>
                    </td>


                    <td>
                        <label>
                            <b>Description</b></label>
                    </td>

                    <td>
                        <label>
                            <b>SubTotal</b></label>
                    </td>

                </tr>

");

            
            #line 246 "G:\Company\MensClothe\PaymentOrder.cshtml"
                
            
            #line default
            #line hidden
            
            #line 246 "G:\Company\MensClothe\PaymentOrder.cshtml"
                 foreach (var item in CartItems)
                { 

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td>\r\n                         " +
"   <label");

WriteLiteral(" id=\"Price\"");

WriteLiteral(">");

            
            #line 250 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                         Write(item.Price);

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                        </td>\r\n                        <td>\r\n\r\n       " +
"                     <label");

WriteLiteral(" id=\"quantity\"");

WriteLiteral(">");

            
            #line 254 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                            Write(item.Quantity);

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                        </td>\r\n                        <td>\r\n         " +
"                   <img");

WriteAttribute("src", Tuple.Create(" src=\"", 8651), Tuple.Create("\"", 8733)
            
            #line 257 "G:\Company\MensClothe\PaymentOrder.cshtml"
, Tuple.Create(Tuple.Create("", 8657), Tuple.Create<System.Object, System.Int32>(MensClothe.AspControlUtil.getFullImagePath(Convert.ToString(item.ImageUrl))
            
            #line default
            #line hidden
, 8657), false)
);

WriteLiteral(" alt=\"Red dot\"");

WriteLiteral(" width=\"100\"");

WriteLiteral(" height=\"150\"");

WriteLiteral(">\r\n                            ");

WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                  " +
"          <label");

WriteLiteral(" id=\"Description\"");

WriteLiteral(">");

            
            #line 262 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                               Write(item.ProductName);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        </td>\r\n\r\n                        <td>\r\n        " +
"                    <label");

WriteLiteral(" id=\"SubTotal\"");

WriteLiteral(">");

            
            #line 266 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                            Write(item.SubTotal);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        </td>\r\n\r\n\r\n\r\n                    </tr>\r\n");

            
            #line 272 "G:\Company\MensClothe\PaymentOrder.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </table>\r\n        </fieldset>\r\n        <fieldset>\r\n            <legen" +
"d>Fill in your Payment details</legend>\r\n            <ol>\r\n\r\n                <li" +
"");

WriteLiteral(" class=\"Clothes\"");

WriteLiteral(">\r\n\r\n                    <label");

WriteLiteral(" for=\"txtCCType\"");

WriteLiteral(" ");

            
            #line 281 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                            if (!ModelState.IsValidField("txtCCType"))
                                           {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 283 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Process with:\r\n                    </label>\r\n         " +
"       </li>\r\n                <li>\r\n                    <select");

WriteLiteral(" id=\"txtCCType\"");

WriteLiteral(">\r\n                        <option");

WriteLiteral(" value=\"\"");

WriteLiteral(">Select Payment Type</option>\r\n                        <option");

WriteLiteral(" value=\"PP\"");

WriteLiteral(">PayPal</option>\r\n                        <option");

WriteLiteral(" value=\"Credit Card\"");

WriteLiteral(">Credit Card</option>\r\n                    </select>\r\n");

WriteLiteral("                    ");

            
            #line 293 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtCCType"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n                <li" +
">\r\n                    <label");

WriteLiteral(" for=\"txtName\"");

WriteLiteral(" ");

            
            #line 298 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                          if (!ModelState.IsValidField("txtName"))
                                         {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 300 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Name:\r\n                    </label>\r\n                <" +
"/li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtName\"");

WriteLiteral(" name=\"txtName\"");

WriteLiteral("  ");

            
            #line 305 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                               Write(Validation.For("txtName"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 306 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtName"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n\r\n            <ol>\r\n                <" +
"li>\r\n                    <label");

WriteLiteral(" for=\"txtAddress\"");

WriteLiteral(" ");

            
            #line 312 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                             if (!ModelState.IsValidField("txtAddress"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 314 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Address:\r\n                    </label>\r\n              " +
"  </li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtAddress\"");

WriteLiteral(" name=\"txtAddress\"");

WriteLiteral("  ");

            
            #line 319 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                     Write(Validation.For("txtAddress"));

            
            #line default
            #line hidden
WriteLiteral("   />\r\n");

WriteLiteral("                    ");

            
            #line 320 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtAddress"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n                <li" +
">\r\n                    <label");

WriteLiteral(" for=\"txtCity\"");

WriteLiteral(" ");

            
            #line 325 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                          if (!ModelState.IsValidField("txtCity"))
                                         {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 327 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        City:\r\n                    </label>\r\n                <" +
"/li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtCity\"");

WriteLiteral(" name=\"txtCity\"");

WriteLiteral("  ");

            
            #line 332 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                               Write(Validation.For("txtCity"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 333 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtCity"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n\r\n                <" +
"li>\r\n                    <label");

WriteLiteral(" for=\"txtZip\"");

WriteLiteral(" ");

            
            #line 339 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                         if (!ModelState.IsValidField("txtState"))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 341 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        State/Province:\r\n                    </label>\r\n       " +
"         </li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtState\"");

WriteLiteral(" name=\"txtState\"");

WriteLiteral("  ");

            
            #line 346 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                 Write(Validation.For("txtState"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 347 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtState"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    &nbsp;&nbsp; \r\n                                    <label");

WriteLiteral(" for=\"ZipCode\"");

WriteLiteral(" ");

            
            #line 349 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                          if (!ModelState.IsValidField("txtZip"))
                                                         {

            
            #line default
            #line hidden
WriteLiteral("                                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 351 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                                        Zip/Postal Code:\r\n                    " +
"                </label>\r\n\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtZip\"");

WriteLiteral(" name=\"txtZip\"");

WriteLiteral("  ");

            
            #line 355 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                             Write(Validation.For("txtZip"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 356 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtZip"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n\r\n                <" +
"li>\r\n                    <label>Country:</label>\r\n                </li>\r\n       " +
"         <li>\r\n                    <select");

WriteLiteral(" id=\"txtCountryId\"");

WriteLiteral(" name=\"txtCountryId\"");

WriteLiteral(">\r\n                        <option");

WriteLiteral(" value=\"US\"");

WriteLiteral(" selected=\"selected\"");

WriteLiteral(">United States</option>\r\n                        <option");

WriteLiteral(" value=\"AL\"");

WriteLiteral(">Albania</option>\r\n                        <option");

WriteLiteral(" value=\"AR\"");

WriteLiteral(">Argentina</option>\r\n                        <option");

WriteLiteral(" value=\"AM\"");

WriteLiteral(">Armenia</option>\r\n                        <option");

WriteLiteral(" value=\"AU\"");

WriteLiteral(">Australia</option>\r\n                        <option");

WriteLiteral(" value=\"AT\"");

WriteLiteral(">Austria</option>\r\n                        <option");

WriteLiteral(" value=\"BE\"");

WriteLiteral(">Belgium</option>\r\n                        <option");

WriteLiteral(" value=\"BO\"");

WriteLiteral(">Bolivia</option>\r\n                        <option");

WriteLiteral(" value=\"BR\"");

WriteLiteral(">Brazil</option>\r\n                        <option");

WriteLiteral(" value=\"BG\"");

WriteLiteral(">Bulgaria</option>\r\n                        <option");

WriteLiteral(" value=\"KH\"");

WriteLiteral(">Cambodia</option>\r\n                        <option");

WriteLiteral(" value=\"CA\"");

WriteLiteral(">Canada</option>\r\n                        <option");

WriteLiteral(" value=\"CL\"");

WriteLiteral(">Chile</option>\r\n                        <option");

WriteLiteral(" value=\"CN\"");

WriteLiteral(">China</option>\r\n                        <option");

WriteLiteral(" value=\"CO\"");

WriteLiteral(">Colombia</option>\r\n                        <option");

WriteLiteral(" value=\"CR\"");

WriteLiteral(">Costa Rica</option>\r\n                        <option");

WriteLiteral(" value=\"CU\"");

WriteLiteral(">Cuba</option>\r\n                        <option");

WriteLiteral(" value=\"CZ\"");

WriteLiteral(">Czech Republic</option>\r\n                        <option");

WriteLiteral(" value=\"DK\"");

WriteLiteral(">Denmark</option>\r\n                        <option");

WriteLiteral(" value=\"EC\"");

WriteLiteral(">Ecuador</option>\r\n                        <option");

WriteLiteral(" value=\"EG\"");

WriteLiteral(">Egypt</option>\r\n                        <option");

WriteLiteral(" value=\"EE\"");

WriteLiteral(">Estonia</option>\r\n                        <option");

WriteLiteral(" value=\"ET\"");

WriteLiteral(">Ethiopia</option>\r\n                        <option");

WriteLiteral(" value=\"FI\"");

WriteLiteral(">Finland</option>\r\n                        <option");

WriteLiteral(" value=\"FR\"");

WriteLiteral(">France</option>\r\n                        <option");

WriteLiteral(" value=\"DE\"");

WriteLiteral(">Germany</option>\r\n                        <option");

WriteLiteral(" value=\"GR\"");

WriteLiteral(">Greece</option>\r\n                        <option");

WriteLiteral(" value=\"GL\"");

WriteLiteral(">Greenland</option>\r\n                        <option");

WriteLiteral(" value=\"GD\"");

WriteLiteral(">Grenada</option>\r\n                        <option");

WriteLiteral(" value=\"GU\"");

WriteLiteral(">Guam</option>\r\n                        <option");

WriteLiteral(" value=\"GT\"");

WriteLiteral(">Guatemala</option>\r\n                        <option");

WriteLiteral(" value=\"HT\"");

WriteLiteral(">Haiti</option>\r\n                        <option");

WriteLiteral(" value=\"HN\"");

WriteLiteral(">Honduras</option>\r\n                        <option");

WriteLiteral(" value=\"HK\"");

WriteLiteral(">Hong Kong</option>\r\n                        <option");

WriteLiteral(" value=\"HU\"");

WriteLiteral(">Hungary</option>\r\n                        <option");

WriteLiteral(" value=\"IS\"");

WriteLiteral(">Iceland</option>\r\n                        <option");

WriteLiteral(" value=\"IN\"");

WriteLiteral(">India</option>\r\n                        <option");

WriteLiteral(" value=\"ID\"");

WriteLiteral(">Indonesia</option>\r\n                        <option");

WriteLiteral(" value=\"IE\"");

WriteLiteral(">Ireland</option>\r\n                        <option");

WriteLiteral(" value=\"IL\"");

WriteLiteral(">Israel</option>\r\n                        <option");

WriteLiteral(" value=\"IT\"");

WriteLiteral(">Italy</option>\r\n                        <option");

WriteLiteral(" value=\"JM\"");

WriteLiteral(">Jamaica</option>\r\n                        <option");

WriteLiteral(" value=\"JP\"");

WriteLiteral(">Japan</option>\r\n                        <option");

WriteLiteral(" value=\"LB\"");

WriteLiteral(">Lebanon</option>\r\n                        <option");

WriteLiteral(" value=\"LI\"");

WriteLiteral(">Liechtenstein</option>\r\n                        <option");

WriteLiteral(" value=\"LU\"");

WriteLiteral(">Luxembourg</option>\r\n                        <option");

WriteLiteral(" value=\"MG\"");

WriteLiteral(">Madagascar</option>\r\n                        <option");

WriteLiteral(" value=\"MY\"");

WriteLiteral(">Malaysia</option>\r\n                        <option");

WriteLiteral(" value=\"MX\"");

WriteLiteral(">Mexico</option>\r\n                        <option");

WriteLiteral(" value=\"MC\"");

WriteLiteral(">Monaco</option>\r\n                        <option");

WriteLiteral(" value=\"MA\"");

WriteLiteral(">Morocco</option>\r\n                        <option");

WriteLiteral(" value=\"NL\"");

WriteLiteral(">Netherlands</option>\r\n                        <option");

WriteLiteral(" value=\"NZ\"");

WriteLiteral(">New Zealand</option>\r\n                        <option");

WriteLiteral(" value=\"NI\"");

WriteLiteral(">Nicaragua</option>\r\n                        <option");

WriteLiteral(" value=\"KP\"");

WriteLiteral(">North Korea</option>\r\n                        <option");

WriteLiteral(" value=\"NO\"");

WriteLiteral(">Norway</option>\r\n                        <option");

WriteLiteral(" value=\"PK\"");

WriteLiteral(">Pakistan</option>\r\n                        <option");

WriteLiteral(" value=\"PA\"");

WriteLiteral(">Panama</option>\r\n                        <option");

WriteLiteral(" value=\"PE\"");

WriteLiteral(">Peru</option>\r\n                        <option");

WriteLiteral(" value=\"PH\"");

WriteLiteral(">Philippines</option>\r\n                        <option");

WriteLiteral(" value=\"PL\"");

WriteLiteral(">Poland</option>\r\n                        <option");

WriteLiteral(" value=\"PT\"");

WriteLiteral(">Portugal</option>\r\n                        <option");

WriteLiteral(" value=\"PR\"");

WriteLiteral(">Puerto Rico</option>\r\n                        <option");

WriteLiteral(" value=\"RO\"");

WriteLiteral(">Romania</option>\r\n                        <option");

WriteLiteral(" value=\"RU\"");

WriteLiteral(">Russian Federation</option>\r\n                        <option");

WriteLiteral(" value=\"SA\"");

WriteLiteral(">Saudi Arabia</option>\r\n                        <option");

WriteLiteral(" value=\"SG\"");

WriteLiteral(">Singapore</option>\r\n                        <option");

WriteLiteral(" value=\"ZA\"");

WriteLiteral(">South Africa</option>\r\n                        <option");

WriteLiteral(" value=\"KR\"");

WriteLiteral(">South Korea</option>\r\n                        <option");

WriteLiteral(" value=\"ES\"");

WriteLiteral(">Spain</option>\r\n                        <option");

WriteLiteral(" value=\"SE\"");

WriteLiteral(">Sweden</option>\r\n                        <option");

WriteLiteral(" value=\"CH\"");

WriteLiteral(">Switzerland</option>\r\n                        <option");

WriteLiteral(" value=\"TW\"");

WriteLiteral(">Taiwan</option>\r\n                        <option");

WriteLiteral(" value=\"TH\"");

WriteLiteral(">Thailand</option>\r\n                        <option");

WriteLiteral(" value=\"TR\"");

WriteLiteral(">Turkey</option>\r\n                        <option");

WriteLiteral(" value=\"UA\"");

WriteLiteral(">Ukraine</option>\r\n                        <option");

WriteLiteral(" value=\"AE\"");

WriteLiteral(">United Arab Emirates</option>\r\n                        <option");

WriteLiteral(" value=\"GB\"");

WriteLiteral(">United Kingdom</option>\r\n                        <option");

WriteLiteral(" value=\"US\"");

WriteLiteral(">United States</option>\r\n                        <option");

WriteLiteral(" value=\"VE\"");

WriteLiteral(">Venezuela</option>\r\n                        <option");

WriteLiteral(" value=\"VN\"");

WriteLiteral(">Vietnam</option>\r\n                        <option");

WriteLiteral(" value=\"VG\"");

WriteLiteral(">Virgin Islands (British)</option>\r\n                        <option");

WriteLiteral(" value=\"VI\"");

WriteLiteral(">Virgin Islands (U.S.)</option>\r\n                        <option");

WriteLiteral(" value=\"ZZ\"");

WriteLiteral(">Other-Not Shown</option>\r\n\r\n                    </select>\r\n                </li>" +
"\r\n            </ol>\r\n            <ol>\r\n\r\n                <li>\r\n                 " +
"   <label");

WriteLiteral(" for=\"txtEmail\"");

WriteLiteral(" ");

            
            #line 457 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                           if (!ModelState.IsValidField("txtEmail"))
                                          {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 459 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Email:\r\n                    </label>\r\n                " +
"</li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtEmail\"");

WriteLiteral(" name=\"txtEmail\"");

WriteLiteral(" ");

            
            #line 464 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                Write(Validation.For("txtEmail"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 465 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtEmail"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n                <li" +
">\r\n                    <label");

WriteLiteral(" for=\"txtPhone\"");

WriteLiteral(" ");

            
            #line 470 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                           if (!ModelState.IsValidField("txtPhone"))
                                          {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 472 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Phone:\r\n                    </label>\r\n                " +
"</li>\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtPhone\"");

WriteLiteral(" name=\"txtPhone\"");

WriteLiteral(" ");

            
            #line 477 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                Write(Validation.For("txtPhone"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 478 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtPhone"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n                <li" +
">\r\n                    <label");

WriteLiteral(" for=\"txtCC\"");

WriteLiteral(" ");

            
            #line 483 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                        if (!ModelState.IsValidField("txtCC"))
                                       {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 485 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Card Number:\r\n                    </label>\r\n          " +
"          <li />\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtCC\"");

WriteLiteral(" ");

            
            #line 490 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                             Write(Validation.For("txtCC"));

            
            #line default
            #line hidden
WriteLiteral("  name=\"txtCC\"  onchange=\"TextBox8_TextChanged\" />\r\n");

WriteLiteral("                    ");

            
            #line 491 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtCC"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n            <ol>\r\n\r\n                <" +
"li>\r\n                    <label>Expiration: </label>\r\n                    <li />" +
"\r\n                <li>\r\n                    <select");

WriteLiteral(" id=\"txtCCMonth\"");

WriteLiteral(" name=\"txtCCMonth\"");

WriteLiteral(" enableviewstate=\"False\"");

WriteLiteral(">\r\n");

            
            #line 501 "G:\Company\MensClothe\PaymentOrder.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 501 "G:\Company\MensClothe\PaymentOrder.cshtml"
                         for (int i = 1; i <= 12; i++)
                        {
                            DateTime month = new DateTime(2000, i, 1);
                            if (i == 1)
                            {   

            
            #line default
            #line hidden
WriteLiteral("                            <option");

WriteLiteral(" selected=\"selected\"");

WriteAttribute("value", Tuple.Create("  value=\"", 20572), Tuple.Create("\"", 20607)
            
            #line 506 "G:\Company\MensClothe\PaymentOrder.cshtml"
, Tuple.Create(Tuple.Create("", 20581), Tuple.Create<System.Object, System.Int32>(month.ToString("MMM (M)")
            
            #line default
            #line hidden
, 20581), false)
);

WriteLiteral(">");

            
            #line 506 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                                       Write(month.ToString("MM"));

            
            #line default
            #line hidden
WriteLiteral("</option> \r\n");

            
            #line 507 "G:\Company\MensClothe\PaymentOrder.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <option");

WriteAttribute("value", Tuple.Create("  value=\"", 20708), Tuple.Create("\"", 20743)
            
            #line 508 "G:\Company\MensClothe\PaymentOrder.cshtml"
, Tuple.Create(Tuple.Create("", 20717), Tuple.Create<System.Object, System.Int32>(month.ToString("MMM (M)")
            
            #line default
            #line hidden
, 20717), false)
);

WriteLiteral(">");

            
            #line 508 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                   Write(month.ToString("MM"));

            
            #line default
            #line hidden
WriteLiteral("</option> \r\n");

            
            #line 509 "G:\Company\MensClothe\PaymentOrder.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </select>\r\n                    <label>Year: </label>\r\n       " +
"             <select");

WriteLiteral(" id=\"txtCCYear\"");

WriteLiteral(" name=\"txtCCYear\"");

WriteLiteral(" enableviewstate=\"False\"");

WriteLiteral(">\r\n");

            
            #line 513 "G:\Company\MensClothe\PaymentOrder.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 513 "G:\Company\MensClothe\PaymentOrder.cshtml"
                         for (int i = 0; i <= 11; i++)
                        {
                            String year = (DateTime.Today.Year + i).ToString();
                            if (i == 0)
                            { 

            
            #line default
            #line hidden
WriteLiteral("                            <option");

WriteLiteral(" selected=\"selected\"");

WriteAttribute("value", Tuple.Create(" value=\"", 21257), Tuple.Create("\"", 21270)
            
            #line 518 "G:\Company\MensClothe\PaymentOrder.cshtml"
, Tuple.Create(Tuple.Create("", 21265), Tuple.Create<System.Object, System.Int32>(year
            
            #line default
            #line hidden
, 21265), false)
);

WriteLiteral(">");

            
            #line 518 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                 Write(year);

            
            #line default
            #line hidden
WriteLiteral("</option> \r\n");

            
            #line 519 "G:\Company\MensClothe\PaymentOrder.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <option");

WriteAttribute("value", Tuple.Create("  value=\"", 21355), Tuple.Create("\"", 21369)
            
            #line 520 "G:\Company\MensClothe\PaymentOrder.cshtml"
, Tuple.Create(Tuple.Create("", 21364), Tuple.Create<System.Object, System.Int32>(year
            
            #line default
            #line hidden
, 21364), false)
);

WriteLiteral(">");

            
            #line 520 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                              Write(year);

            
            #line default
            #line hidden
WriteLiteral("</option>\r\n");

            
            #line 521 "G:\Company\MensClothe\PaymentOrder.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </select>\r\n                </li>\r\n\r\n            </ol>\r\n      " +
"      <ol>\r\n                <li>\r\n                    <label");

WriteLiteral(" for=\"txtSecurity\"");

WriteLiteral(" ");

            
            #line 528 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                              if (!ModelState.IsValidField("txtSecurity"))
                                             {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("class=\"error-label\"");

            
            #line 530 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                        }
            
            #line default
            #line hidden
WriteLiteral(">\r\n                        Security Code:\r\n                    </label>\r\n        " +
"            <li />\r\n                <li>\r\n                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtSecurity\"");

WriteLiteral(" name=\"txtSecurity\"");

WriteLiteral("  ");

            
            #line 535 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                                       Write(Validation.For("txtSecurity"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                    ");

            
            #line 536 "G:\Company\MensClothe\PaymentOrder.cshtml"
               Write(Html.ValidationMessage("txtSecurity"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n            </ol>\r\n\r\n            <p>\r\n                To" +
"tal  Amount of this order:&nbsp;\r\n\t\t\t\t\t\t<input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtOrderAmount\"");

WriteLiteral("  name=\"txtOrderAmount\"");

WriteLiteral(" ");

            
            #line 542 "G:\Company\MensClothe\PaymentOrder.cshtml"
                                                               Write(Validation.For("txtOrderAmount"));

            
            #line default
            #line hidden
WriteLiteral("  />\r\n                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"btnSubmit\"");

WriteLiteral(" value=\"Process\"");

WriteLiteral(" onclick=\"btnSubmit_Click(variableA, variableB, variableC, variableD);\"");

WriteLiteral("></>\r\n            </p>\r\n            <p>\r\n                <label");

WriteLiteral(" id=\"lblErrorMessage\"");

WriteLiteral(@"></label>
            </p>

        </fieldset>
    </form>
</section>
<section>
    <p>&nbsp;</p>
    <blockquote>
        <h3>Configuration:</h3>
        <hr>
        In order to configure this demo application you have to modify the 
  Configuration.cs file and fill in your PayPal and CC processor information. 
  The default demo is configured for Authorize.NET and PayPal with payments 
  directed at West Wind Technologies. Feel free to make a donation, preferably 
  large &lt;g&gt;. You can change the values in this file.
  <p>
      For more information on the classes and configuration requirements and URLs 
  for each please see the following documentation topics:
  </p>
        <p>
            <a
                href=""http://www.west-wind.com/westwindwebstore/docs/index.htm?page=_13U0XJX0K.htm"">Credit 
  Card Processing Classes</a><br>
            <a
                href=""http://www.west-wind.com/westwindwebstore/docs/index.htm?page=_13Z13TG18.htm"">Using 
  the Credit Card Processing Classes</a>
        </p>
        <p>&nbsp;</p>
    </blockquote>

</section>

");

        }
    }
}
