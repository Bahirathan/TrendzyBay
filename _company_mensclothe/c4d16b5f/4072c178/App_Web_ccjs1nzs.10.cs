#pragma checksum "G:\Company\MensClothe\Account\Manage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "A1F68C5463E4B39DBAB9EF04C71332F64BEB777A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP {
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.WebPages.Html;
    
    #line 1 "G:\Company\MensClothe\Account\Manage.cshtml"
    using WebMatrix.WebData;
    
    #line default
    #line hidden
    using WebMatrix.Data;
    using Microsoft.Web.WebPages.OAuth;
    using DotNetOpenAuth.AspNet;
    
    
    public class _Page_Account_Manage_cshtml : System.Web.WebPages.WebPage {
        
#line hidden
        
        public _Page_Account_Manage_cshtml() {
        }
        
        protected ASP.global_asax ApplicationInstance {
            get {
                return ((ASP.global_asax)(Context.ApplicationInstance));
            }
        }
        
        public override void Execute() {
WriteLiteral("\r\n");

WriteLiteral("\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 112), Tuple.Create("\"", 150)
, Tuple.Create(Tuple.Create("", 118), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.min.js")
, 118), false)
);

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 174), Tuple.Create("\"", 224)
, Tuple.Create(Tuple.Create("", 180), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.unobtrusive.min.js")
, 180), false)
);

WriteLiteral("></script>\r\n");

});

WriteLiteral("\r\n");

            
            #line 9 "G:\Company\MensClothe\Account\Manage.cshtml"
  
    WebSecurity.RequireAuthenticatedUser();

    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Manage Account";

    var action = Request.Form["action"];

    bool hasLocalAccount = OAuthWebSecurity.HasLocalAccount(WebSecurity.CurrentUserId);

    string successMessage = "";
    var message = Request.QueryString["message"];
    if (message == "ChangedPassword") {
        successMessage = "Your password has been changed.";
    } else if (message == "SetPassword") {
        successMessage = "Your password has been set.";
    } else if (message == "RemovedLogin") {
        successMessage = "The external login was removed.";
    }

    var externalLogins =
        (from account in OAuthWebSecurity.GetAccountsFromUserName(WebSecurity.CurrentUserName)
         let clientData = OAuthWebSecurity.GetOAuthClientData(account.Provider)
         select new { Provider = account.Provider, ProviderDisplayName = clientData.DisplayName, UserId = account.ProviderUserId })
        .ToList();
    bool canRemoveLogin = externalLogins.Count > 1 || hasLocalAccount;

    // Setup validation
    if (hasLocalAccount) {
        Validation.RequireField("currentPassword", "The current password field is required.");
        Validation.Add("currentPassword",
            Validator.StringLength(
                maxLength: Int32.MaxValue,
                minLength: 6,
                errorMessage: "Current password must be at least 6 characters"));
    }
    Validation.RequireField("newPassword", "The new password field is required.");
    Validation.Add("confirmPassword",
        Validator.Required("The confirm new password field is required."),
        Validator.EqualsTo("newPassword", "The new password and confirmation password do not match."));
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "New password must be at least 6 characters"));

    if (IsPost) {
        AntiForgery.Validate();
        if (action == "password") {
            // Handle local account password operations
            var currentPassword = Request.Form["currentPassword"];
            var newPassword = Request.Form["newPassword"];
            var confirmPassword = Request.Form["confirmPassword"];

            if (Validation.IsValid()) {
                if (hasLocalAccount) {
                    if (WebSecurity.ChangePassword(WebSecurity.CurrentUserName, currentPassword, newPassword)) {
                        Response.Redirect("~/Account/Manage?message=ChangedPassword");
                        return;
                    } else {
                        ModelState.AddFormError("An error occurred when attempting to change the password. Please contact the site owner.");
                    }
                } else {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    try {
                        WebSecurity.CreateAccount(WebSecurity.CurrentUserName, newPassword, requireEmailConfirmation);
                        Response.Redirect("~/Account/Manage?message=SetPassword");
                        return;
                    } catch (System.Web.Security.MembershipCreateUserException e) {
                        ModelState.AddFormError(e.Message);
                    }
                }
            } else {
                ModelState.AddFormError("Password change was unsuccessful. Please correct the errors and try again.");
            }
        } else if (action == "removeLogin") {
            // Remove external login
            var provider = Request.Form["provider"];
            var userId = Request.Form["userId"];

            message = null;
            var ownerAccount = OAuthWebSecurity.GetUserName(provider, userId);
            // Only remove the external login if it is owned by the currently logged in user and it is not the users last login credential
            if (ownerAccount == WebSecurity.CurrentUserName && canRemoveLogin) {
                OAuthWebSecurity.DeleteAccount(provider, userId);
                message = "RemovedLogin";
            }
            Response.Redirect(Href("~/Account/Manage", new { message }));
            return;
        } else {
            // Assume this an external login request
            string provider = Request.Form["provider"];
            if (!provider.IsEmpty()) {
                OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl = Href("~/Account/Manage") }));
                return;
            }
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<hgroup");

WriteLiteral(" class=\"title\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 109 "G:\Company\MensClothe\Account\Manage.cshtml"
   Write(Page.Title);

            
            #line default
            #line hidden
WriteLiteral(".</h1>\r\n</hgroup>\r\n\r\n");

            
            #line 112 "G:\Company\MensClothe\Account\Manage.cshtml"
 if (!successMessage.IsEmpty()) {

            
            #line default
            #line hidden
WriteLiteral("    <p");

WriteLiteral(" class=\"message-success\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 114 "G:\Company\MensClothe\Account\Manage.cshtml"
   Write(successMessage);

            
            #line default
            #line hidden
WriteLiteral("\r\n    </p>\r\n");

            
            #line 116 "G:\Company\MensClothe\Account\Manage.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n<p>You\'re logged in as <strong>");

            
            #line 118 "G:\Company\MensClothe\Account\Manage.cshtml"
                          Write(WebSecurity.CurrentUserName);

            
            #line default
            #line hidden
WriteLiteral("</strong>.</p>\r\n\r\n");

            
            #line 120 "G:\Company\MensClothe\Account\Manage.cshtml"
 if (hasLocalAccount) {

            
            #line default
            #line hidden
WriteLiteral("    <h3>Change password</h3>\r\n");

            
            #line 122 "G:\Company\MensClothe\Account\Manage.cshtml"
} else {

            
            #line default
            #line hidden
WriteLiteral("    <p>\r\n        You do not have a local password for this site. Add a local pass" +
"word so you can log in without an external login.\r\n    </p>\r\n");

            
            #line 126 "G:\Company\MensClothe\Account\Manage.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n<form");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 129 "G:\Company\MensClothe\Account\Manage.cshtml"
Write(AntiForgery.GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 130 "G:\Company\MensClothe\Account\Manage.cshtml"
Write(Html.ValidationSummary(excludeFieldErrors: true));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    <fieldset>\r\n");

            
            #line 133 "G:\Company\MensClothe\Account\Manage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 133 "G:\Company\MensClothe\Account\Manage.cshtml"
         if (hasLocalAccount) {

            
            #line default
            #line hidden
WriteLiteral("            <legend>Change Password Form</legend>\r\n");

            
            #line 135 "G:\Company\MensClothe\Account\Manage.cshtml"
        } else {

            
            #line default
            #line hidden
WriteLiteral("            <legend>Set Password Form</legend>\r\n");

            
            #line 137 "G:\Company\MensClothe\Account\Manage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <ol>\r\n");

            
            #line 139 "G:\Company\MensClothe\Account\Manage.cshtml"
            
            
            #line default
            #line hidden
            
            #line 139 "G:\Company\MensClothe\Account\Manage.cshtml"
             if (hasLocalAccount) {

            
            #line default
            #line hidden
WriteLiteral("                <li");

WriteLiteral(" class=\"current-password\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" for=\"currentPassword\"");

WriteLiteral(" ");

            
            #line 141 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                  if (!ModelState.IsValidField("currentPassword")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 141 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                                                                                    }
            
            #line default
            #line hidden
WriteLiteral(">Current password</label>\r\n                    <input");

WriteLiteral(" type=\"password\"");

WriteLiteral(" id=\"currentPassword\"");

WriteLiteral(" name=\"currentPassword\"");

WriteLiteral(" ");

            
            #line 142 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                                  Write(Validation.For("currentPassword"));

            
            #line default
            #line hidden
WriteLiteral("/>\r\n");

WriteLiteral("                    ");

            
            #line 143 "G:\Company\MensClothe\Account\Manage.cshtml"
               Write(Html.ValidationMessage("currentPassword"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </li>\r\n");

            
            #line 145 "G:\Company\MensClothe\Account\Manage.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <li");

WriteLiteral(" class=\"new-password\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"newPassword\"");

WriteLiteral(" ");

            
            #line 147 "G:\Company\MensClothe\Account\Manage.cshtml"
                                          if (!ModelState.IsValidField("newPassword")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 147 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                                                                        }
            
            #line default
            #line hidden
WriteLiteral(">New password</label>\r\n                <input");

WriteLiteral(" type=\"password\"");

WriteLiteral(" id=\"newPassword\"");

WriteLiteral(" name=\"newPassword\"");

WriteLiteral(" ");

            
            #line 148 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                      Write(Validation.For("newPassword"));

            
            #line default
            #line hidden
WriteLiteral("/>\r\n");

WriteLiteral("                ");

            
            #line 149 "G:\Company\MensClothe\Account\Manage.cshtml"
           Write(Html.ValidationMessage("newPassword"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"confirm-password\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"confirmPassword\"");

WriteLiteral(" ");

            
            #line 152 "G:\Company\MensClothe\Account\Manage.cshtml"
                                              if (!ModelState.IsValidField("confirmPassword")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 152 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                                                                                }
            
            #line default
            #line hidden
WriteLiteral(">Confirm new password</label>\r\n                <input");

WriteLiteral(" type=\"password\"");

WriteLiteral(" id=\"confirmPassword\"");

WriteLiteral(" name=\"confirmPassword\"");

WriteLiteral(" ");

            
            #line 153 "G:\Company\MensClothe\Account\Manage.cshtml"
                                                                              Write(Validation.For("confirmPassword"));

            
            #line default
            #line hidden
WriteLiteral("/>\r\n");

WriteLiteral("                ");

            
            #line 154 "G:\Company\MensClothe\Account\Manage.cshtml"
           Write(Html.ValidationMessage("confirmPassword"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n        </ol>\r\n");

            
            #line 157 "G:\Company\MensClothe\Account\Manage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 157 "G:\Company\MensClothe\Account\Manage.cshtml"
         if (hasLocalAccount) {

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"action\"");

WriteLiteral(" value=\"password\"");

WriteLiteral(">Change Password</button>\r\n");

WriteLiteral("            <p>\r\n                Click <a");

WriteAttribute("href", Tuple.Create(" href=\"", 7121), Tuple.Create("\"", 7152)
, Tuple.Create(Tuple.Create("", 7128), Tuple.Create<System.Object, System.Int32>(Href("~/Account/ForgotPassword")
, 7128), false)
);

WriteLiteral(" title=\"Forgot password page\"");

WriteLiteral(">here</a> if you\'ve forgotten your password.\r\n            </p>\r\n");

            
            #line 162 "G:\Company\MensClothe\Account\Manage.cshtml"
        } else {

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"action\"");

WriteLiteral(" value=\"password\"");

WriteLiteral(">Set Password</button>\r\n");

            
            #line 164 "G:\Company\MensClothe\Account\Manage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </fieldset>\r\n</form>\r\n\r\n<section");

WriteLiteral(" id=\"externalLogins\"");

WriteLiteral(">\r\n");

            
            #line 169 "G:\Company\MensClothe\Account\Manage.cshtml"
    
            
            #line default
            #line hidden
            
            #line 169 "G:\Company\MensClothe\Account\Manage.cshtml"
     if (externalLogins.Count > 0) {

            
            #line default
            #line hidden
WriteLiteral("        <h3>Registered external logins</h3>\r\n");

WriteLiteral("        <table>\r\n            <tbody>\r\n");

            
            #line 173 "G:\Company\MensClothe\Account\Manage.cshtml"
            
            
            #line default
            #line hidden
            
            #line 173 "G:\Company\MensClothe\Account\Manage.cshtml"
             foreach (var externalLogin in externalLogins) {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td>");

            
            #line 175 "G:\Company\MensClothe\Account\Manage.cshtml"
                   Write(externalLogin.ProviderDisplayName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td>\r\n");

            
            #line 177 "G:\Company\MensClothe\Account\Manage.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 177 "G:\Company\MensClothe\Account\Manage.cshtml"
                         if (canRemoveLogin) {

            
            #line default
            #line hidden
WriteLiteral("                            <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 179 "G:\Company\MensClothe\Account\Manage.cshtml"
                           Write(AntiForgery.GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <fieldset>\r\n                                   " +
" <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"provider\"");

WriteAttribute("value", Tuple.Create(" value=\"", 7988), Tuple.Create("\"", 8019)
            
            #line 181 "G:\Company\MensClothe\Account\Manage.cshtml"
, Tuple.Create(Tuple.Create("", 7996), Tuple.Create<System.Object, System.Int32>(externalLogin.Provider
            
            #line default
            #line hidden
, 7996), false)
);

WriteLiteral(" />\r\n                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"userId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 8095), Tuple.Create("\"", 8124)
            
            #line 182 "G:\Company\MensClothe\Account\Manage.cshtml"
, Tuple.Create(Tuple.Create("", 8103), Tuple.Create<System.Object, System.Int32>(externalLogin.UserId
            
            #line default
            #line hidden
, 8103), false)
);

WriteLiteral(" />\r\n                                    <button");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"action\"");

WriteLiteral(" value=\"removeLogin\"");

WriteAttribute("title", Tuple.Create(" title=\"", 8221), Tuple.Create("\"", 8304)
, Tuple.Create(Tuple.Create("", 8229), Tuple.Create("Remove", 8229), true)
, Tuple.Create(Tuple.Create(" ", 8235), Tuple.Create("this", 8236), true)
            
            #line 183 "G:\Company\MensClothe\Account\Manage.cshtml"
                              , Tuple.Create(Tuple.Create(" ", 8240), Tuple.Create<System.Object, System.Int32>(externalLogin.ProviderDisplayName
            
            #line default
            #line hidden
, 8241), false)
, Tuple.Create(Tuple.Create(" ", 8275), Tuple.Create("credential", 8276), true)
, Tuple.Create(Tuple.Create(" ", 8286), Tuple.Create("from", 8287), true)
, Tuple.Create(Tuple.Create(" ", 8291), Tuple.Create("your", 8292), true)
, Tuple.Create(Tuple.Create(" ", 8296), Tuple.Create("account", 8297), true)
);

WriteLiteral(">Remove</button>\r\n                                </fieldset>\r\n                  " +
"          </form>\r\n");

            
            #line 186 "G:\Company\MensClothe\Account\Manage.cshtml"
                        } else {

            
            #line default
            #line hidden
WriteLiteral("                            ");

WriteLiteral(" &nbsp;\r\n");

            
            #line 188 "G:\Company\MensClothe\Account\Manage.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </td>\r\n                </tr>\r\n");

            
            #line 191 "G:\Company\MensClothe\Account\Manage.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            </tbody>\r\n        </table>\r\n");

            
            #line 194 "G:\Company\MensClothe\Account\Manage.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n    <h3>Add an external login</h3>\r\n");

WriteLiteral("    ");

            
            #line 197 "G:\Company\MensClothe\Account\Manage.cshtml"
Write(RenderPage("~/Account/_ExternalLoginsList.cshtml"));

            
            #line default
            #line hidden
WriteLiteral("\r\n</section>\r\n");

        }
    }
}
