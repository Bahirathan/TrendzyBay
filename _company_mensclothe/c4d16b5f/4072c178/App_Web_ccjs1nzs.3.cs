#pragma checksum "G:\Company\MensClothe\Account\Register.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "22890D1B760E9E818F200899C352C25B827E8645"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP {
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.WebPages.Html;
    using WebMatrix.Data;
    using WebMatrix.WebData;
    using Microsoft.Web.WebPages.OAuth;
    using DotNetOpenAuth.AspNet;
    
    
    public class _Page_Account_Register_cshtml : System.Web.WebPages.WebPage {
        
#line hidden
        
        public _Page_Account_Register_cshtml() {
        }
        
        protected ASP.global_asax ApplicationInstance {
            get {
                return ((ASP.global_asax)(Context.ApplicationInstance));
            }
        }
        
        public override void Execute() {
WriteLiteral("\r\n\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 86), Tuple.Create("\"", 124)
, Tuple.Create(Tuple.Create("", 92), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.min.js")
, 92), false)
);

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 148), Tuple.Create("\"", 198)
, Tuple.Create(Tuple.Create("", 154), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.unobtrusive.min.js")
, 154), false)
);

WriteLiteral("></script>\r\n");

});

WriteLiteral("\r\n");

            
            #line 8 "G:\Company\MensClothe\Account\Register.cshtml"
  
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Register";

    // Initialize general page variables
    var email = "";
    var password = "";
    var confirmPassword = "";

    // Setup validation
    Validation.RequireField("email", "You must specify an email address.");
    Validation.RequireField("password", "Password cannot be blank.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("password", "Password and confirmation password do not match."));
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];

        // Validate the user's captcha answer
        // if (!ReCaptcha.Validate("PRIVATE_KEY")) {
        //     ModelState.AddError("recaptcha", "Captcha response was not correct");
        // }

        // If all information is valid, create a new account
        if (Validation.IsValid()) {
            // Insert a new user into the database
            var db = Database.Open("mensClothe");

            // Check if user already exists
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Insert email into the profile table
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);

                // Create and associate a new entry in the membership database.
                // If successful, continue processing the request
                try {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation) {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Please confirm your account",
                            body: "Your confirmation code is: " + token + ". Visit <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a> to activate your account."
                        );
                    }

                    if (requireEmailConfirmation) {
                        // Thank the user for registering and let them know an email is on its way
                        Response.Redirect("~/Account/Thanks");
                    } else {
                        // Navigate back to the homepage and exit
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
            } else {
                // User already exists
                ModelState.AddFormError("Email address is already in use.");
            }
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<hgroup");

WriteLiteral(" class=\"title\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 88 "G:\Company\MensClothe\Account\Register.cshtml"
   Write(Page.Title);

            
            #line default
            #line hidden
WriteLiteral(".</h1>\r\n    <h2>Create a new account.</h2>\r\n</hgroup>\r\n\r\n<form");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 93 "G:\Company\MensClothe\Account\Register.cshtml"
Write(AntiForgery.GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 95 "G:\Company\MensClothe\Account\Register.cshtml"
Write(Html.ValidationSummary("Account creation was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    <fieldset>\r\n        <legend>Registration Form</legend>\r\n        <ol>\r\n   " +
"         <li");

WriteLiteral(" class=\"email\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"email\"");

WriteLiteral(" ");

            
            #line 101 "G:\Company\MensClothe\Account\Register.cshtml"
                                    if(!ModelState.IsValidField("email")){
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 101 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                                                          }
            
            #line default
            #line hidden
WriteLiteral(">Email address</label>\r\n                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"email\"");

WriteLiteral(" name=\"email\"");

WriteAttribute("value", Tuple.Create(" value=\"", 4440), Tuple.Create("\"", 4454)
            
            #line 102 "G:\Company\MensClothe\Account\Register.cshtml"
, Tuple.Create(Tuple.Create("", 4448), Tuple.Create<System.Object, System.Int32>(email
            
            #line default
            #line hidden
, 4448), false)
);

WriteLiteral(" ");

            
            #line 102 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                     Write(Validation.For("email"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                ");

WriteLiteral("\r\n");

WriteLiteral("                ");

            
            #line 104 "G:\Company\MensClothe\Account\Register.cshtml"
           Write(Html.ValidationMessage("email"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"password\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"password\"");

WriteLiteral(" ");

            
            #line 107 "G:\Company\MensClothe\Account\Register.cshtml"
                                       if(!ModelState.IsValidField("password")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 107 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                                                                 }
            
            #line default
            #line hidden
WriteLiteral(">Password</label>\r\n                <input");

WriteLiteral(" type=\"password\"");

WriteLiteral(" id=\"password\"");

WriteLiteral(" name=\"password\"");

WriteLiteral(" ");

            
            #line 108 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                Write(Validation.For("password"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                ");

WriteLiteral("\r\n");

WriteLiteral("                ");

            
            #line 110 "G:\Company\MensClothe\Account\Register.cshtml"
           Write(Html.ValidationMessage("password"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"confirm-password\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"confirmPassword\"");

WriteLiteral(" ");

            
            #line 113 "G:\Company\MensClothe\Account\Register.cshtml"
                                              if(!ModelState.IsValidField("confirmPassword")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 113 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                                                                               }
            
            #line default
            #line hidden
WriteLiteral(">Confirm password</label>\r\n                <input");

WriteLiteral(" type=\"password\"");

WriteLiteral(" id=\"confirmPassword\"");

WriteLiteral(" name=\"confirmPassword\"");

WriteLiteral(" ");

            
            #line 114 "G:\Company\MensClothe\Account\Register.cshtml"
                                                                              Write(Validation.For("confirmPassword"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                ");

WriteLiteral("\r\n");

WriteLiteral("                ");

            
            #line 116 "G:\Company\MensClothe\Account\Register.cshtml"
           Write(Html.ValidationMessage("confirmPassword"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"recaptcha\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"message-info\"");

WriteLiteral(">\r\n                    <p>\r\n                        To enable CAPTCHA verificatio" +
"n, <a");

WriteLiteral(" href=\"http://go.microsoft.com/fwlink/?LinkId=204140\"");

WriteLiteral(@">install the 
                        ASP.NET Web Helpers Library</a> and uncomment ReCaptcha.GetHtml and replace 'PUBLIC_KEY'
                        with your public key. At the top of this page, uncomment ReCaptcha. Validate and
                        replace 'PRIVATE_KEY' with your private key.
                        Register for reCAPTCHA keys at <a");

WriteLiteral(" href=\"http://recaptcha.net\"");

WriteLiteral(">reCAPTCHA.net</a>.\r\n                    </p>\r\n                </div>\r\n          " +
"      ");

WriteLiteral("\r\n            </li>\r\n        </ol>\r\n        <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Register\"");

WriteLiteral(" />\r\n    </fieldset>\r\n</form>");

        }
    }
}
