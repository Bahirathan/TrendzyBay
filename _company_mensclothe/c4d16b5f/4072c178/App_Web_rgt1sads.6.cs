#pragma checksum "G:\Company\MensClothe\HomePage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "693788626874F17586B7014E96C4A16B1AFC46E1"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP {
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.WebPages.Html;
    using WebMatrix.Data;
    using WebMatrix.WebData;
    using Microsoft.Web.WebPages.OAuth;
    using DotNetOpenAuth.AspNet;
    
    
    public class _Page_HomePage_cshtml : System.Web.WebPages.WebPage {
        
#line hidden
        
        public _Page_HomePage_cshtml() {
        }
        
        protected ASP.global_asax ApplicationInstance {
            get {
                return ((ASP.global_asax)(Context.ApplicationInstance));
            }
        }
        
        public override void Execute() {
            
            #line 1 "G:\Company\MensClothe\HomePage.cshtml"
  
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Home Page";

    
    
    // Initialize general page variables
    var email = "";
    var password = "";
    var confirmPassword = "";

 

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];

        // Validate the user's captcha answer
        // if (!ReCaptcha.Validate("PRIVATE_KEY")) {
        //     ModelState.AddError("recaptcha", "Captcha response was not correct");
        // }

        // If all information is valid, create a new account
        if (Validation.IsValid()) {
            // Insert a new user into the database
            var db = Database.Open("mensClothe");

            // Check if user already exists
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Insert email into the profile table
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);

                // Create and associate a new entry in the membership database.
                // If successful, continue processing the request
                try {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation) {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Please confirm your account",
                            body: "Your confirmation code is: " + token + ". Visit <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a> to activate your account."
                        );
                    }

                    if (requireEmailConfirmation) {
                        // Thank the user for registering and let them know an email is on its way
                        Response.Redirect("~/Account/Thanks");
                    } else {
                        // Navigate back to the homepage and exit
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
            } else {
                // User already exists
                ModelState.AddFormError("Email address is already in use.");
            }
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n \r\n \r\n\r\n");

DefineSection("featured", () => {

WriteLiteral("\r\n<section");

WriteLiteral(" class=\"featured\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"content-wrapper\"");

WriteLiteral(">\r\n        <hgroup");

WriteLiteral(" class=\"title\"");

WriteLiteral(">\r\n            <h1>");

            
            #line 80 "G:\Company\MensClothe\HomePage.cshtml"
           Write(Page.Title);

            
            #line default
            #line hidden
WriteLiteral(".</h1>\r\n            <h2>Men\'s Online Store</h2>\r\n        </hgroup>\r\n      \r\n     " +
"   <p>\r\n             <input");

WriteLiteral(" id=\"search\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"search item\"");

WriteLiteral(" />   <input");

WriteLiteral(" id=\"searchBox\"");

WriteLiteral(" type=\"text\"");

WriteLiteral("   />\r\n        </p>\r\n    </div>\r\n</section>\r\n");

});

WriteLiteral("\r\n<h3>Products</h3>\r\n\r\n<ol");

WriteLiteral(" class=\"round\"");

WriteLiteral(">\r\n    <li");

WriteLiteral(" class=\"one\"");

WriteLiteral(">\r\n        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3527), Tuple.Create("\"", 3556)
, Tuple.Create(Tuple.Create("", 3534), Tuple.Create<System.Object, System.Int32>(Href("~/Clothe/ClotheResults")
, 3534), false)
);

WriteLiteral(">Clothe Items</a>\r\n    </li>\r\n\r\n    <li");

WriteLiteral(" class=\"two\"");

WriteLiteral(">\r\n        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3621), Tuple.Create("\"", 3652)
, Tuple.Create(Tuple.Create("", 3628), Tuple.Create<System.Object, System.Int32>(Href("~/Leather/LeatherResults")
, 3628), false)
);

WriteLiteral(">Leather Items</a>\r\n    </li>\r\n\r\n    <li");

WriteLiteral(" class=\"three\"");

WriteLiteral(">\r\n        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3720), Tuple.Create("\"", 3756)
, Tuple.Create(Tuple.Create("", 3727), Tuple.Create<System.Object, System.Int32>(Href("~/Cosmentics/CosmeticsResults")
, 3727), false)
);

WriteLiteral(">Cosmetic Items</a>\r\n    </li>\r\n\r\n    <li");

WriteLiteral(" class=\"three\"");

WriteLiteral(">\r\n        \r\n        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3835), Tuple.Create("\"", 3872)
, Tuple.Create(Tuple.Create("", 3842), Tuple.Create<System.Object, System.Int32>(Href("~/Accesories/AccesoriesResults")
, 3842), false)
);

WriteLiteral(">Accesories</a>\r\n    </li>\r\n\r\n     \r\n\r\n</ol>");

        }
    }
}
