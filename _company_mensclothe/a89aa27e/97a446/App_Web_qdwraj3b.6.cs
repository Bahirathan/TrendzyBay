#pragma checksum "I:\Company\MensClothe\Account\RegisterService.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "C216892D40854F00E5396E1D9349A0D2D2B72383"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP {
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.WebPages.Html;
    using WebMatrix.Data;
    using WebMatrix.WebData;
    using Microsoft.Web.WebPages.OAuth;
    using DotNetOpenAuth.AspNet;
    
    
    public class _Page_Account_RegisterService_cshtml : System.Web.WebPages.WebPage {
        
#line hidden
        
        public _Page_Account_RegisterService_cshtml() {
        }
        
        protected ASP.global_asax ApplicationInstance {
            get {
                return ((ASP.global_asax)(Context.ApplicationInstance));
            }
        }
        
        public override void Execute() {
WriteLiteral("\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 84), Tuple.Create("\"", 122)
, Tuple.Create(Tuple.Create("", 90), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.min.js")
, 90), false)
);

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 146), Tuple.Create("\"", 196)
, Tuple.Create(Tuple.Create("", 152), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.validate.unobtrusive.min.js")
, 152), false)
);

WriteLiteral("></script>\r\n");

});

WriteLiteral("\r\n");

            
            #line 7 "I:\Company\MensClothe\Account\RegisterService.cshtml"
  
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Register";

    string email = "";
    string loginData = "";
    string providerDisplayName = "";

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        // Some external login providers always require a return URL value
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("email", "The user name field is required.");

    if (IsPost && Request.Form["newAccount"].AsBool()) {
        // Handle new account registration form
        AntiForgery.Validate();
        email = Request.Form["email"];
        loginData = Request.Form["loginData"];

        string provider = "";
        string providerUserId = "";
        if (WebSecurity.IsAuthenticated || !OAuthWebSecurity.TryDeserializeProviderUserId(loginData, out provider, out providerUserId)) {
            Response.Redirect("~/Account/Manage");
            return;
        }

        providerDisplayName = OAuthWebSecurity.GetOAuthClientData(provider).DisplayName;
        if (Validation.IsValid()) {
            // Insert a new user into the database
            var db = Database.Open("mensClothe");

            // Check if user already exists
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Insert email into the profile table
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);
                OAuthWebSecurity.CreateOrUpdateAccount(provider, providerUserId, email);

                OAuthWebSecurity.Login(provider, providerUserId, createPersistentCookie: false);

                Context.RedirectLocal(returnUrl);
                return;
            } else {
                ModelState.AddError("email", "User name already exists. Please enter a different user name.");
            }
        }
    } else {
        // Handle callbacks from the external login provider

        var result = OAuthWebSecurity.VerifyAuthentication(Href("~/Account/RegisterService", new { returnUrl }));
        if (result.IsSuccessful) {
            bool registered = OAuthWebSecurity.Login(result.Provider, result.ProviderUserId, createPersistentCookie: false);
            if (registered) {
                Context.RedirectLocal(returnUrl);
                return;
            }

            if (WebSecurity.IsAuthenticated) {
                // If the current user is logged in add the new account
                OAuthWebSecurity.CreateOrUpdateAccount(result.Provider, result.ProviderUserId, WebSecurity.CurrentUserName);
                Context.RedirectLocal(returnUrl);
                return;
            } else {
                // User is new, set default user name to the value obtained from external login provider
                email = result.UserName;
                loginData = OAuthWebSecurity.SerializeProviderUserId(result.Provider, result.ProviderUserId);
                providerDisplayName = OAuthWebSecurity.GetOAuthClientData(result.Provider).DisplayName;
            }
        } else {
            Response.Redirect("~/Account/ExternalLoginFailure");
            return;
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<hgroup");

WriteLiteral(" class=\"title\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 86 "I:\Company\MensClothe\Account\RegisterService.cshtml"
   Write(Page.Title);

            
            #line default
            #line hidden
WriteLiteral(".</h1>\r\n    <h2>Associate your ");

            
            #line 87 "I:\Company\MensClothe\Account\RegisterService.cshtml"
                  Write(providerDisplayName);

            
            #line default
            #line hidden
WriteLiteral(" account.</h2>\r\n</hgroup>\r\n\r\n<form");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 91 "I:\Company\MensClothe\Account\RegisterService.cshtml"
Write(AntiForgery.GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"loginData\"");

WriteAttribute("value", Tuple.Create(" value=\"", 3741), Tuple.Create("\"", 3759)
            
            #line 92 "I:\Company\MensClothe\Account\RegisterService.cshtml"
, Tuple.Create(Tuple.Create("", 3749), Tuple.Create<System.Object, System.Int32>(loginData
            
            #line default
            #line hidden
, 3749), false)
);

WriteLiteral(" />\r\n    ");

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 94 "I:\Company\MensClothe\Account\RegisterService.cshtml"
Write(Html.ValidationSummary(excludeFieldErrors: true));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    <fieldset>\r\n        <legend>Registration Form</legend>\r\n        <p>\r\n    " +
"        You\'ve successfully authenticated with <strong>");

            
            #line 99 "I:\Company\MensClothe\Account\RegisterService.cshtml"
                                                      Write(providerDisplayName);

            
            #line default
            #line hidden
WriteLiteral("</strong>. Please\r\n            enter a user name for this site below and click th" +
"e Confirm button to finish logging\r\n            in.\r\n        </p>\r\n        <ol>\r" +
"\n            <li");

WriteLiteral(" class=\"email\"");

WriteLiteral(">\r\n                <label");

WriteLiteral(" for=\"email\"");

WriteLiteral(" ");

            
            #line 105 "I:\Company\MensClothe\Account\RegisterService.cshtml"
                                    if (!ModelState.IsValidField("email")) {
            
            #line default
            #line hidden
WriteLiteral("class=\"error-label\"");

            
            #line 105 "I:\Company\MensClothe\Account\RegisterService.cshtml"
                                                                                                            }
            
            #line default
            #line hidden
WriteLiteral(">Email address</label>\r\n                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"email\"");

WriteLiteral(" name=\"email\"");

WriteAttribute("value", Tuple.Create(" value=\"", 4427), Tuple.Create("\"", 4441)
            
            #line 106 "I:\Company\MensClothe\Account\RegisterService.cshtml"
, Tuple.Create(Tuple.Create("", 4435), Tuple.Create<System.Object, System.Int32>(email
            
            #line default
            #line hidden
, 4435), false)
);

WriteLiteral(" ");

            
            #line 106 "I:\Company\MensClothe\Account\RegisterService.cshtml"
                                                                     Write(Validation.For("email"));

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                ");

WriteLiteral("\r\n");

WriteLiteral("                ");

            
            #line 108 "I:\Company\MensClothe\Account\RegisterService.cshtml"
           Write(Html.ValidationMessage("email"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </li>\r\n        </ol>\r\n        <button");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"newAccount\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(">Register</button>\r\n    </fieldset>\r\n</form>\r\n");

        }
    }
}
